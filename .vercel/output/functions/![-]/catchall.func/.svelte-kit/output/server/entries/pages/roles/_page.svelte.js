import { c as create_ssr_component, b as add_attribute, e as escape, n as null_to_empty, d as each, v as validate_component } from "../../../chunks/ssr.js";
import { H as HomeBtn } from "../../../chunks/HomeBtn.js";
import { c as cardList, b as bigDescriptionList } from "../../../chunks/data.js";
class Randomizer {
  static shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  }
  static randomInteger(min, max) {
    let rand = min + Math.random() * (max + 1 - min);
    return Math.floor(rand);
  }
}
const css = {
  code: ".card.svelte-15kgd9e.svelte-15kgd9e{width:85vw;height:54vmax;min-height:360px;max-height:600px;border-radius:15px;transform:rotateY(180deg);transition:transform 0.4s;transform-style:preserve-3d;user-select:none;cursor:pointer;box-shadow:0px 4px 5px #262626}.card.show.svelte-15kgd9e.svelte-15kgd9e{transform:rotateY(0)}.front.svelte-15kgd9e.svelte-15kgd9e,.back.svelte-15kgd9e.svelte-15kgd9e{transform-style:preserve-3d;display:flex;align-items:center;justify-content:center;position:absolute;width:100%;height:100%;left:0;top:0;backface-visibility:hidden;border-radius:10px;border:1px solid black;box-sizing:border-box;padding:25px}.front.svelte-15kgd9e.svelte-15kgd9e{background-color:white;background-position:center;background-size:contain;background-repeat:no-repeat;flex-direction:column;gap:15px;padding:10px}.back.svelte-15kgd9e.svelte-15kgd9e{transform:rotateY(180deg);background-color:white;display:grid;grid-template-columns:1fr 1fr;gap:20px;justify-items:center;overflow:hidden}.imgWrapper.svelte-15kgd9e.svelte-15kgd9e{max-height:100%}.my-img.svelte-15kgd9e.svelte-15kgd9e{max-width:100%;max-height:100%;border-radius:10px;margin:auto;object-fit:contain}.my-text.svelte-15kgd9e.svelte-15kgd9e{display:flex;flex-direction:column;justify-content:center;align-items:center;align-content:center;gap:20px}.back.svelte-15kgd9e h2.svelte-15kgd9e,.front.svelte-15kgd9e h2.svelte-15kgd9e{font-size:60px}.back.svelte-15kgd9e p.svelte-15kgd9e{font-size:40px;text-align:center;text-wrap:balance}.front.svelte-15kgd9e>p.svelte-15kgd9e{font-size:25px;text-align:center;text-wrap:balance;max-width:1300px;font-weight:500}@media(max-width: 720px){.back.svelte-15kgd9e.svelte-15kgd9e{display:flex;justify-content:center;align-items:center;flex-direction:column;gap:10px;overflow:hidden}.back.svelte-15kgd9e p.svelte-15kgd9e,.front.svelte-15kgd9e p.svelte-15kgd9e{font-size:20px}.imgWrapper.svelte-15kgd9e.svelte-15kgd9e{max-height:75%}.my-text.svelte-15kgd9e.svelte-15kgd9e{justify-content:flex-start;gap:5px}.my-text.svelte-15kgd9e>h2.svelte-15kgd9e,.front.svelte-15kgd9e>h2.svelte-15kgd9e{font-size:40px}}@media(max-width: 480px){.card.svelte-15kgd9e.svelte-15kgd9e{height:360px;min-height:330px}.back.svelte-15kgd9e.svelte-15kgd9e{padding:14px}.back.svelte-15kgd9e p.svelte-15kgd9e{font-size:20px;font-weight:500}.back.svelte-15kgd9e h2.svelte-15kgd9e,.front.svelte-15kgd9e>h2.svelte-15kgd9e{font-size:25px}.front.svelte-15kgd9e.svelte-15kgd9e{gap:7px}.front.svelte-15kgd9e>p.svelte-15kgd9e{font-size:15px;max-width:auto}}",
  map: `{"version":3,"file":"CardWithText.svelte","sources":["CardWithText.svelte"],"sourcesContent":["<script>\\r\\n\\texport let name = 'Мирний',\\r\\n\\t\\tdescription = 'Ну шо ш?',\\r\\n\\t\\tmyImg = 'Man2',\\r\\n\\t\\tbigDescription = 'Я Люблю спати вночі...',\\r\\n\\t\\ttag = '';\\r\\n\\r\\n\\tlet flipped = false;\\r\\n\\r\\n\\tfunction flip() {\\r\\n\\t\\tflipped = !flipped;\\r\\n\\t}\\r\\n<\/script>\\r\\n\\r\\n<!-- svelte-ignore a11y-click-events-have-key-events -->\\r\\n<!-- svelte-ignore a11y-no-static-element-interactions -->\\r\\n<div class={'card ' + tag} class:show={flipped} on:click={flip}>\\r\\n\\t<div class=\\"back\\">\\r\\n\\t\\t<div class=\\"imgWrapper\\">\\r\\n\\t\\t\\t<img src=\\"/assets/cards/{myImg}.png\\" class=\\"my-img\\" alt={name} />\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"my-text\\">\\r\\n\\t\\t\\t<h2>{name}</h2>\\r\\n\\t\\t\\t<p>{description}</p>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\"front\\">\\r\\n\\t\\t<h2>{name}</h2>\\r\\n\\t\\t<p>{bigDescription}</p>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.card {\\r\\n\\t\\twidth: 85vw;\\r\\n\\t\\theight: 54vmax;\\r\\n\\t\\tmin-height: 360px;\\r\\n\\t\\tmax-height: 600px;\\r\\n\\t\\tborder-radius: 15px;\\r\\n\\t\\ttransform: rotateY(180deg);\\r\\n\\t\\ttransition: transform 0.4s;\\r\\n\\t\\ttransform-style: preserve-3d;\\r\\n\\t\\tuser-select: none;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\tbox-shadow: 0px 4px 5px #262626;\\r\\n\\t}\\r\\n\\r\\n\\t.card.show {\\r\\n\\t\\ttransform: rotateY(0);\\r\\n\\t}\\r\\n\\r\\n\\t.front,\\r\\n\\t.back {\\r\\n\\t\\ttransform-style: preserve-3d;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tbackface-visibility: hidden;\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\tborder: 1px solid black;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\tpadding: 25px;\\r\\n\\t}\\r\\n\\r\\n\\t.front {\\r\\n\\t\\tbackground-color: white;\\r\\n\\t\\tbackground-position: center;\\r\\n\\t\\tbackground-size: contain;\\r\\n\\t\\tbackground-repeat: no-repeat;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\tgap: 15px;\\r\\n\\t\\tpadding: 10px;\\r\\n\\t}\\r\\n\\r\\n\\t.back {\\r\\n\\t\\ttransform: rotateY(180deg);\\r\\n\\t\\tbackground-color: white;\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tgrid-template-columns: 1fr 1fr;\\r\\n\\t\\tgap: 20px;\\r\\n\\t\\tjustify-items: center;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t}\\r\\n\\r\\n\\t.imgWrapper {\\r\\n\\t\\tmax-height: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.my-img {\\r\\n\\t\\tmax-width: 100%;\\r\\n\\t\\tmax-height: 100%;\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\tmargin: auto;\\r\\n\\t\\tobject-fit: contain;\\r\\n\\t}\\r\\n\\r\\n\\t.my-text {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\talign-content: center;\\r\\n\\t\\tgap: 20px;\\r\\n\\t}\\r\\n\\r\\n\\t.back h2,\\r\\n\\t.front h2 {\\r\\n\\t\\tfont-size: 60px;\\r\\n\\t}\\r\\n\\r\\n\\t.back p {\\r\\n\\t\\tfont-size: 40px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\ttext-wrap: balance;\\r\\n\\t}\\r\\n\\r\\n\\t.front > p {\\r\\n\\t\\tfont-size: 25px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\ttext-wrap: balance;\\r\\n\\t\\tmax-width: 1300px;\\r\\n\\t\\tfont-weight: 500;\\r\\n\\t}\\r\\n\\r\\n\\t@media (max-width: 720px) {\\r\\n\\t\\t.back {\\r\\n\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\talign-items: center;\\r\\n\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\tgap: 10px;\\r\\n\\t\\t\\toverflow: hidden;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.back p,\\r\\n\\t\\t.front p {\\r\\n\\t\\t\\tfont-size: 20px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.imgWrapper {\\r\\n\\t\\t\\tmax-height: 75%;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.my-text {\\r\\n\\t\\t\\tjustify-content: flex-start;\\r\\n\\t\\t\\tgap: 5px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.my-text > h2,\\r\\n\\t\\t.front > h2 {\\r\\n\\t\\t\\tfont-size: 40px;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@media (max-width: 480px) {\\r\\n\\t\\t.card {\\r\\n\\t\\t\\theight: 360px;\\r\\n\\t\\t\\tmin-height: 330px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.back {\\r\\n\\t\\t\\tpadding: 14px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.back p {\\r\\n\\t\\t\\tfont-size: 20px;\\r\\n\\t\\t\\tfont-weight: 500;\\r\\n\\t\\t}\\r\\n\\t\\t.back h2,\\r\\n\\t\\t.front > h2 {\\r\\n\\t\\t\\tfont-size: 25px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.front {\\r\\n\\t\\t\\tgap: 7px;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.front > p {\\r\\n\\t\\t\\tfont-size: 15px;\\r\\n\\t\\t\\tmax-width: auto;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"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"}`
};
const CardWithText = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { name = "Мирний", description = "Ну шо ш?", myImg = "Man2", bigDescription = "Я Люблю спати вночі...", tag = "" } = $$props;
  if ($$props.name === void 0 && $$bindings.name && name !== void 0) $$bindings.name(name);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0) $$bindings.description(description);
  if ($$props.myImg === void 0 && $$bindings.myImg && myImg !== void 0) $$bindings.myImg(myImg);
  if ($$props.bigDescription === void 0 && $$bindings.bigDescription && bigDescription !== void 0) $$bindings.bigDescription(bigDescription);
  if ($$props.tag === void 0 && $$bindings.tag && tag !== void 0) $$bindings.tag(tag);
  $$result.css.add(css);
  return `  <div class="${[
    escape(null_to_empty("card " + tag), true) + " svelte-15kgd9e",
    ""
  ].join(" ").trim()}"><div class="back svelte-15kgd9e"><div class="imgWrapper svelte-15kgd9e"><img src="${"/assets/cards/" + escape(myImg, true) + ".png"}" class="my-img svelte-15kgd9e"${add_attribute("alt", name, 0)}></div> <div class="my-text svelte-15kgd9e"><h2 class="svelte-15kgd9e">${escape(name)}</h2> <p class="svelte-15kgd9e">${escape(description)}</p></div></div> <div class="front svelte-15kgd9e"><h2 class="svelte-15kgd9e">${escape(name)}</h2> <p class="svelte-15kgd9e">${escape(bigDescription)}</p></div> </div>`;
});
function createUniqueCardList() {
  const tagMap = {};
  for (const card of cardList) {
    if (!tagMap[card.tag]) {
      tagMap[card.tag] = [];
    }
    tagMap[card.tag].push(card);
  }
  return Object.entries(tagMap).map(([tag, cards]) => {
    const selectedElement = cards[Randomizer.randomInteger(0, cards.length - 1)];
    return {
      ...selectedElement,
      bigDescription: bigDescriptionList[tag]
    };
  });
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let visbleList = createUniqueCardList();
  return `<div style="display: flex; flex-direction:column; justify-content:center; align-items: center; gap: 10px; padding: 10px">${each(visbleList, (card) => {
    return `${validate_component(CardWithText, "CardWithText").$$render($$result, Object.assign({}, card), {}, {})}`;
  })} ${validate_component(HomeBtn, "HomeBtn").$$render($$result, {}, {}, {})}</div>`;
});
export {
  Page as default
};
