import { c as create_ssr_component, b as add_attribute, e as escape, a as subscribe, v as validate_component, d as each } from "../../../chunks/ssr.js";
import { H as HomeBtn } from "../../../chunks/HomeBtn.js";
import { c as cardRules } from "../../../chunks/stores.js";
const css$1 = {
  code: ".card.svelte-z9erki.svelte-z9erki{--side:-100%;top:0;right:0;position:absolute;width:85vw;height:80vh;border-radius:15px;transform:rotateY(180deg) translate(-50%, -50%);transition-duration:0.4s;transition-property:transform, visibility, opacity;transform-style:preserve-3d;user-select:none;cursor:pointer;box-shadow:0px 4px 5px #262626}.card.show.svelte-z9erki.svelte-z9erki{transform:rotateY(0) translate(50%, -50%)}.card.hide.svelte-z9erki.svelte-z9erki{transform:rotateY(0) translate(var(--side), -50%);visibility:hidden;opacity:0;pointer-events:none}.front.svelte-z9erki.svelte-z9erki,.back.svelte-z9erki.svelte-z9erki{transform-style:preserve-3d;display:flex;align-items:center;justify-content:center;position:absolute;width:100%;height:100%;left:0;top:0;backface-visibility:hidden;border-radius:10px;border:1px solid black;box-sizing:border-box;padding:25px}.back.svelte-z9erki.svelte-z9erki{transform:rotateY(180deg);background-image:url('/assets/back-side.png');background-position:center;background-size:contain;background-repeat:no-repeat;background-color:black}.front.svelte-z9erki.svelte-z9erki{background-color:white;display:grid;grid-template-columns:repeat(2, 1fr);gap:20px;justify-items:center;overflow:hidden}.imgWrapper.svelte-z9erki.svelte-z9erki{max-width:100%;height:100%;overflow:hidden;display:flex;justify-content:center;align-items:center;align-content:center}.my-img.svelte-z9erki.svelte-z9erki{max-width:100%;max-height:100%;height:calc(40vw - 60px);aspect-ratio:1/1;border-radius:10px;margin:auto;object-fit:contain}.my-text.svelte-z9erki.svelte-z9erki{display:flex;flex-direction:column;justify-content:center;align-items:center;align-content:center;gap:10px}.my-text.svelte-z9erki>h2.svelte-z9erki{font-size:50px;text-align:center}.my-text.svelte-z9erki>p.svelte-z9erki{font-size:30px;text-align:center}@media(max-width: 850px){.front.svelte-z9erki.svelte-z9erki{display:flex;justify-content:center;align-items:center;flex-direction:column;gap:10px;overflow:hidden}.imgWrapper.svelte-z9erki.svelte-z9erki{height:auto}.my-img.svelte-z9erki.svelte-z9erki{height:auto}.my-text.svelte-z9erki.svelte-z9erki{justify-content:flex-start;gap:5px}}@media(max-width: 500px){.my-text.svelte-z9erki h2.svelte-z9erki{font-size:35px}.my-text.svelte-z9erki>p.svelte-z9erki{font-size:20px;text-align:center}}",
  map: `{"version":3,"file":"Card.svelte","sources":["Card.svelte"],"sourcesContent":["<script>\\r\\n\\texport let name = 'Мирний',\\r\\n\\t\\tdescription = 'Ну шо ш?',\\r\\n\\t\\tmyImg = 'Man2',\\r\\n\\t\\tid = 0,\\r\\n\\t\\tshowingElement = 0,\\r\\n\\t\\telementIndex = 0,\\r\\n\\t\\tchangeData = () => {\\r\\n\\t\\t\\tconsole.log('hi');\\r\\n\\t\\t};\\r\\n\\r\\n\\tlet flipped = false;\\r\\n\\tlet isShown = false;\\r\\n\\r\\n\\tfunction flip(event) {\\r\\n\\t\\tif (showingElement !== id) return;\\r\\n\\r\\n\\t\\tif (!flipped) {\\r\\n\\t\\t\\tflipped = true;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tif (!isShown) {\\r\\n\\t\\t\\t\\tisShown = true;\\r\\n\\t\\t\\t\\tevent.target.onclick = '';\\r\\n\\t\\t\\t\\tchangeData();\\r\\n\\t\\t\\t\\tsetTimeout(() => (flipped = false), 400);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n<\/script>\\r\\n\\r\\n<!-- svelte-ignore a11y-click-events-have-key-events -->\\r\\n<!-- svelte-ignore a11y-no-static-element-interactions -->\\r\\n<div\\r\\n\\tclass=\\"card\\"\\r\\n\\tstyle={'--side: ' + (elementIndex % 2 ? '160%' : '-100%')}\\r\\n\\tclass:show={flipped}\\r\\n\\tclass:hide={isShown}\\r\\n\\ton:click={flip}\\r\\n>\\r\\n\\t<div class=\\"back\\" />\\r\\n\\t<div class=\\"front\\">\\r\\n\\t\\t<div class=\\"imgWrapper\\">\\r\\n\\t\\t\\t<img src=\\"/assets/cards/{myImg}.png\\" class=\\"my-img\\" alt={name} />\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"my-text\\">\\r\\n\\t\\t\\t<h2>{name}</h2>\\r\\n\\t\\t\\t<p>{description}</p>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.card {\\r\\n\\t\\t--side: -100%;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tright: 0;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 85vw;\\r\\n\\t\\theight: 80vh;\\r\\n\\t\\tborder-radius: 15px;\\r\\n\\t\\ttransform: rotateY(180deg) translate(-50%, -50%);\\r\\n\\t\\ttransition-duration: 0.4s;\\r\\n\\t\\ttransition-property: transform, visibility, opacity;\\r\\n\\t\\ttransform-style: preserve-3d;\\r\\n\\t\\tuser-select: none;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\tbox-shadow: 0px 4px 5px #262626;\\r\\n\\t}\\r\\n\\r\\n\\t.card.show {\\r\\n\\t\\ttransform: rotateY(0) translate(50%, -50%);\\r\\n\\t}\\r\\n\\r\\n\\t.card.hide {\\r\\n\\t\\ttransform: rotateY(0) translate(var(--side), -50%);\\r\\n\\t\\tvisibility: hidden;\\r\\n\\t\\topacity: 0;\\r\\n\\t\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n\\t.front,\\r\\n\\t.back {\\r\\n\\t\\ttransform-style: preserve-3d;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tleft: 0;\\r\\n\\t\\ttop: 0;\\r\\n\\t\\tbackface-visibility: hidden;\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\tborder: 1px solid black;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\tpadding: 25px;\\r\\n\\t}\\r\\n\\r\\n\\t.back {\\r\\n\\t\\ttransform: rotateY(180deg);\\r\\n\\t\\tbackground-image: url('/assets/back-side.png');\\r\\n\\t\\tbackground-position: center;\\r\\n\\t\\tbackground-size: contain;\\r\\n\\t\\tbackground-repeat: no-repeat;\\r\\n\\t\\tbackground-color: black;\\r\\n\\t}\\r\\n\\r\\n\\t.front {\\r\\n\\t\\tbackground-color: white;\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tgrid-template-columns: repeat(2, 1fr);\\r\\n\\t\\tgap: 20px;\\r\\n\\t\\tjustify-items: center;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t}\\r\\n\\r\\n\\t/* IMG WITH contain size WORKING!!!! */\\r\\n\\r\\n\\t.imgWrapper {\\r\\n\\t\\tmax-width: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\talign-content: center;\\r\\n\\t}\\r\\n\\r\\n\\t.my-img {\\r\\n\\t\\tmax-width: 100%;\\r\\n\\t\\tmax-height: 100%;\\r\\n\\t\\theight: calc(40vw - 60px);\\r\\n\\t\\taspect-ratio: 1/1;\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\tmargin: auto;\\r\\n\\t\\tobject-fit: contain;\\r\\n\\t}\\r\\n\\r\\n\\t.my-text {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\talign-content: center;\\r\\n\\t\\tgap: 10px;\\r\\n\\t}\\r\\n\\r\\n\\t.my-text > h2 {\\r\\n\\t\\tfont-size: 50px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n\\r\\n\\t.my-text > p {\\r\\n\\t\\tfont-size: 30px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n\\r\\n\\t@media (max-width: 850px) {\\r\\n\\t\\t.front {\\r\\n\\t\\t\\tdisplay: flex;\\r\\n\\t\\t\\tjustify-content: center;\\r\\n\\t\\t\\talign-items: center;\\r\\n\\t\\t\\tflex-direction: column;\\r\\n\\t\\t\\tgap: 10px;\\r\\n\\t\\t\\toverflow: hidden;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.imgWrapper {\\r\\n\\t\\t\\theight: auto;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.my-img {\\r\\n\\t\\t\\theight: auto;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t.my-text {\\r\\n\\t\\t\\tjustify-content: flex-start;\\r\\n\\t\\t\\tgap: 5px;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t@media (max-width: 500px) {\\r\\n\\t\\t.my-text h2 {\\r\\n\\t\\t\\tfont-size: 35px;\\r\\n\\t\\t}\\r\\n\\t\\t.my-text > p {\\r\\n\\t\\t\\tfont-size: 20px;\\r\\n\\t\\t\\ttext-align: center;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAoDC,iCAAM,CACL,MAAM,CAAE,KAAK,CACb,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,SAAS,CAAE,QAAQ,MAAM,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChD,mBAAmB,CAAE,IAAI,CACzB,mBAAmB,CAAE,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CACnD,eAAe,CAAE,WAAW,CAC5B,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OACzB,CAEA,KAAK,iCAAM,CACV,SAAS,CAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAC1C,CAEA,KAAK,iCAAM,CACV,SAAS,CAAE,QAAQ,CAAC,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAClD,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,CAAC,CACV,cAAc,CAAE,IACjB,CAEA,kCAAM,CACN,iCAAM,CACL,eAAe,CAAE,WAAW,CAC5B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,CAAC,CACP,GAAG,CAAE,CAAC,CACN,mBAAmB,CAAE,MAAM,CAC3B,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,IACV,CAEA,iCAAM,CACL,SAAS,CAAE,QAAQ,MAAM,CAAC,CAC1B,gBAAgB,CAAE,4BAA4B,CAC9C,mBAAmB,CAAE,MAAM,CAC3B,eAAe,CAAE,OAAO,CACxB,iBAAiB,CAAE,SAAS,CAC5B,gBAAgB,CAAE,KACnB,CAEA,kCAAO,CACN,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,GAAG,CAAE,IAAI,CACT,aAAa,CAAE,MAAM,CACrB,QAAQ,CAAE,MACX,CAIA,uCAAY,CACX,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,MAChB,CAEA,mCAAQ,CACP,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CACzB,YAAY,CAAE,CAAC,CAAC,CAAC,CACjB,aAAa,CAAE,IAAI,CACnB,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OACb,CAEA,oCAAS,CACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,MAAM,CACrB,GAAG,CAAE,IACN,CAEA,sBAAQ,CAAG,gBAAG,CACb,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MACb,CAEA,sBAAQ,CAAG,eAAE,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MACb,CAEA,MAAO,YAAY,KAAK,CAAE,CACzB,kCAAO,CACN,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IAAI,CACT,QAAQ,CAAE,MACX,CAEA,uCAAY,CACX,MAAM,CAAE,IACT,CAEA,mCAAQ,CACP,MAAM,CAAE,IACT,CAEA,oCAAS,CACR,eAAe,CAAE,UAAU,CAC3B,GAAG,CAAE,GACN,CACD,CAEA,MAAO,YAAY,KAAK,CAAE,CACzB,sBAAQ,CAAC,gBAAG,CACX,SAAS,CAAE,IACZ,CACA,sBAAQ,CAAG,eAAE,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MACb,CACD"}`
};
const Card = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { name = "Мирний", description = "Ну шо ш?", myImg = "Man2", id = 0, showingElement = 0, elementIndex = 0, changeData = () => {
    console.log("hi");
  } } = $$props;
  if ($$props.name === void 0 && $$bindings.name && name !== void 0) $$bindings.name(name);
  if ($$props.description === void 0 && $$bindings.description && description !== void 0) $$bindings.description(description);
  if ($$props.myImg === void 0 && $$bindings.myImg && myImg !== void 0) $$bindings.myImg(myImg);
  if ($$props.id === void 0 && $$bindings.id && id !== void 0) $$bindings.id(id);
  if ($$props.showingElement === void 0 && $$bindings.showingElement && showingElement !== void 0) $$bindings.showingElement(showingElement);
  if ($$props.elementIndex === void 0 && $$bindings.elementIndex && elementIndex !== void 0) $$bindings.elementIndex(elementIndex);
  if ($$props.changeData === void 0 && $$bindings.changeData && changeData !== void 0) $$bindings.changeData(changeData);
  $$result.css.add(css$1);
  return `  <div class="${["card svelte-z9erki", " "].join(" ").trim()}"${add_attribute("style", "--side: " + (elementIndex % 2 ? "160%" : "-100%"), 0)}><div class="back svelte-z9erki"></div> <div class="front svelte-z9erki"><div class="imgWrapper svelte-z9erki"><img src="${"/assets/cards/" + escape(myImg, true) + ".png"}" class="my-img svelte-z9erki"${add_attribute("alt", name, 0)}></div> <div class="my-text svelte-z9erki"><h2 class="svelte-z9erki">${escape(name)}</h2> <p class="svelte-z9erki">${escape(description)}</p></div></div> </div>`;
});
const css = {
  code: ".center.svelte-1veysv7{height:100%;height:100dvh;width:100vw;overflow:hidden;display:flex;justify-content:center;align-items:center;align-content:center;background-image:url('/assets/background.jpg');background-position:center;background-size:cover;background-repeat:no-repeat}.conteiner-inner.svelte-1veysv7{position:relative}.home-btn.svelte-1veysv7{transform:translate(-50%, -50%);top:50%;left:50%;position:absolute;width:100px;height:100px}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n\\t/** @type {import('./$types').PageData} */\\r\\n\\timport Card from '$lib/UI/Card.svelte';\\r\\n\\timport HomeBtn from '$lib/UI/HomeBtn.svelte';\\r\\n\\timport { onMount } from 'svelte';\\r\\n\\timport createArray from '$lib/functions/createData';\\r\\n\\timport { browser } from '$app/environment';\\r\\n\\timport { cardRules } from '$lib/stores';\\r\\n\\r\\n\\tlet peopleList = [{ name: 'Мирний', description: 'Та я мириний мен', myImg: 'Man2', id: 1 }];\\r\\n\\r\\n\\tlet visiblePeople = [{ name: 'Мирний', description: 'Та я мириний мен', myImg: 'Man2', id: 1 }];\\r\\n\\r\\n\\tlet showingElement = 0;\\r\\n\\tlet maxVisibleCards = 3;\\r\\n\\r\\n\\tfunction changeData(person) {\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tif (peopleList.indexOf(person) + 1 == peopleList.length) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tshowingElement = peopleList[peopleList.indexOf(person) + 1].id;\\r\\n\\t\\t\\tmaxVisibleCards++;\\r\\n\\t\\t\\tvisiblePeople = peopleList.slice(0, maxVisibleCards).reverse();\\r\\n\\t\\t} catch (e) {\\r\\n\\t\\t\\tconsole.log(e);\\r\\n\\t\\t\\tshowingElement = 0;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tonMount(() => {\\r\\n\\t\\tlet data = {\\r\\n\\t\\t\\tmans: 4,\\r\\n\\t\\t\\tmafias: 2,\\r\\n\\t\\t\\twithDoctor: true,\\r\\n\\t\\t\\twithCop: true\\r\\n\\t\\t};\\r\\n\\t\\tif (!browser) return;\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tdata = $cardRules;\\r\\n\\t\\t\\tif (!data) return;\\r\\n\\t\\t} catch (e) {\\r\\n\\t\\t\\tconsole.log(e);\\r\\n\\t\\t}\\r\\n\\t\\tpeopleList = createArray(data).map(\\r\\n\\t\\t\\t({ name = 'Мирний', description = 'Ну шо ш?', myImg = 'Man2' }, index) => {\\r\\n\\t\\t\\t\\treturn { name, description, myImg, id: index };\\r\\n\\t\\t\\t}\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tvisiblePeople = peopleList.slice(0, maxVisibleCards).reverse();\\r\\n\\t});\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"center\\">\\r\\n\\t<div class=\\"conteiner-inner\\">\\r\\n\\t\\t<!-- Must be first -->\\r\\n\\t\\t<div class=\\"home-btn\\">\\r\\n\\t\\t\\t<HomeBtn />\\r\\n\\t\\t</div>\\r\\n\\t\\t{#each visiblePeople as person (person.id)}\\r\\n\\t\\t\\t<Card\\r\\n\\t\\t\\t\\t{...person}\\r\\n\\t\\t\\t\\tchangeData={() => changeData(person)}\\r\\n\\t\\t\\t\\t{showingElement}\\r\\n\\t\\t\\t\\telementIndex={peopleList.indexOf(person)}\\r\\n\\t\\t\\t/>\\r\\n\\t\\t{/each}\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.center {\\r\\n\\t\\theight: 100%;\\r\\n\\t\\theight: 100dvh;\\r\\n\\t\\twidth: 100vw;\\r\\n\\t\\toverflow: hidden;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\talign-content: center;\\r\\n\\t\\tbackground-image: url('/assets/background.jpg');\\r\\n\\t\\tbackground-position: center;\\r\\n\\t\\tbackground-size: cover;\\r\\n\\t\\tbackground-repeat: no-repeat;\\r\\n\\t}\\r\\n\\t.conteiner-inner {\\r\\n\\t\\tposition: relative;\\r\\n\\t}\\r\\n\\r\\n\\t.home-btn {\\r\\n\\t\\ttransform: translate(-50%, -50%);\\r\\n\\t\\ttop: 50%;\\r\\n\\t\\tleft: 50%;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\twidth: 100px;\\r\\n\\t\\theight: 100px;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AAwEC,sBAAQ,CACP,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,MAAM,CACd,KAAK,CAAE,KAAK,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,MAAM,CACrB,gBAAgB,CAAE,6BAA6B,CAC/C,mBAAmB,CAAE,MAAM,CAC3B,eAAe,CAAE,KAAK,CACtB,iBAAiB,CAAE,SACpB,CACA,+BAAiB,CAChB,QAAQ,CAAE,QACX,CAEA,wBAAU,CACT,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,GAAG,CAAE,GAAG,CACR,IAAI,CAAE,GAAG,CACT,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KACT"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_cardRules;
  $$unsubscribe_cardRules = subscribe(cardRules, (value) => value);
  let peopleList = [
    {
      name: "Мирний",
      description: "Та я мириний мен",
      myImg: "Man2",
      id: 1
    }
  ];
  let visiblePeople = [
    {
      name: "Мирний",
      description: "Та я мириний мен",
      myImg: "Man2",
      id: 1
    }
  ];
  let showingElement = 0;
  let maxVisibleCards = 3;
  function changeData(person) {
    try {
      if (peopleList.indexOf(person) + 1 == peopleList.length) {
        return;
      }
      showingElement = peopleList[peopleList.indexOf(person) + 1].id;
      maxVisibleCards++;
      visiblePeople = peopleList.slice(0, maxVisibleCards).reverse();
    } catch (e) {
      console.log(e);
      showingElement = 0;
    }
  }
  $$result.css.add(css);
  $$unsubscribe_cardRules();
  return `<div class="center svelte-1veysv7"><div class="conteiner-inner svelte-1veysv7"> <div class="home-btn svelte-1veysv7">${validate_component(HomeBtn, "HomeBtn").$$render($$result, {}, {}, {})}</div> ${each(visiblePeople, (person) => {
    return `${validate_component(Card, "Card").$$render($$result, Object.assign({}, person, { changeData: () => changeData(person) }, { showingElement }, { elementIndex: peopleList.indexOf(person) }), {}, {})}`;
  })}</div> </div>`;
});
export {
  Page as default
};
